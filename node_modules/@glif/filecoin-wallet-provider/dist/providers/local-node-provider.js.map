{"version":3,"sources":["../../src/providers/local-node-provider.ts"],"names":["LocalNodeProvider","options","apiAddress","token","jsonRpcEngine","LotusRpcEngine","request","from","message"],"mappings":";;;;;;;;;;;;;;;AAAA;;IASaA,iB;AAKX,6BAAYC,OAAZ,EAA+C;AAAA;AAAA;AAAA;AAAA;AAC7C,SAAKC,UAAL,GAAkBD,OAAO,CAACC,UAA1B;AACA,SAAKC,KAAL,GAAaF,OAAO,CAACE,KAArB;AACA,SAAKC,aAAL,GAAqB,IAAIC,6BAAJ,CAAmB;AACtCH,MAAAA,UAAU,EAAED,OAAO,CAACC,UADkB;AAEtCC,MAAAA,KAAK,EAAEF,OAAO,CAACE;AAFuB,KAAnB,CAArB;AAID;;;;iCAE6B;AAC5B,aAAO,KAAKC,aAAL,CAAmBE,OAAnB,CAAmC,WAAnC,EAAgD,WAAhD,CAAP;AACD;;;kCAEgC;AAC/B,aAAO,KAAKF,aAAL,CAAmBE,OAAnB,CAAqC,YAArC,CAAP;AACD;;;yBAEIC,I,EAAcC,O,EAAoD;AACrE,aAAO,KAAKJ,aAAL,CAAmBE,OAAnB,CACL,mBADK,EAELC,IAFK,EAGLC,OAHK,CAAP;AAKD","sourcesContent":["import LotusRpcEngine from '@glif/filecoin-rpc-client'\nimport { LotusMessage, SignedLotusMessage } from '@glif/filecoin-message'\nimport { WalletSubProvider } from '../wallet-sub-provider'\n\nexport type LocalNodeProviderOptions = {\n  apiAddress: string\n  token?: string\n}\n\nexport class LocalNodeProvider implements WalletSubProvider {\n  readonly apiAddress: string\n  readonly token?: string\n  readonly jsonRpcEngine: LotusRpcEngine\n\n  constructor(options: LocalNodeProviderOptions) {\n    this.apiAddress = options.apiAddress\n    this.token = options.token\n    this.jsonRpcEngine = new LotusRpcEngine({\n      apiAddress: options.apiAddress,\n      token: options.token,\n    })\n  }\n\n  newAccount(): Promise<string> {\n    return this.jsonRpcEngine.request<string>('WalletNew', 'secp256k1')\n  }\n\n  getAccounts(): Promise<string[]> {\n    return this.jsonRpcEngine.request<string[]>('WalletList')\n  }\n\n  sign(from: string, message: LotusMessage): Promise<SignedLotusMessage> {\n    return this.jsonRpcEngine.request<SignedLotusMessage>(\n      'WalletSignMessage',\n      from,\n      message,\n    )\n  }\n}\n"],"file":"local-node-provider.js"}